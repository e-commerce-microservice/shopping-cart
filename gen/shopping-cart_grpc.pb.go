// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.2
// source: shopping-cart.proto

package cartpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	ShoppingCartService_CreateShoppingCart_FullMethodName = "/ShoppingCartService/CreateShoppingCart"
	ShoppingCartService_AddItemToCart_FullMethodName      = "/ShoppingCartService/AddItemToCart"
)

// ShoppingCartServiceClient is the client API for ShoppingCartService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ShoppingCartServiceClient interface {
	CreateShoppingCart(ctx context.Context, in *CreateShoppingCartRequest, opts ...grpc.CallOption) (*CreateShoppingCartResponse, error)
	AddItemToCart(ctx context.Context, in *AddItemToCartRequest, opts ...grpc.CallOption) (*AddItemToCartResponse, error)
}

type shoppingCartServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShoppingCartServiceClient(cc grpc.ClientConnInterface) ShoppingCartServiceClient {
	return &shoppingCartServiceClient{cc}
}

func (c *shoppingCartServiceClient) CreateShoppingCart(ctx context.Context, in *CreateShoppingCartRequest, opts ...grpc.CallOption) (*CreateShoppingCartResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateShoppingCartResponse)
	err := c.cc.Invoke(ctx, ShoppingCartService_CreateShoppingCart_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shoppingCartServiceClient) AddItemToCart(ctx context.Context, in *AddItemToCartRequest, opts ...grpc.CallOption) (*AddItemToCartResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddItemToCartResponse)
	err := c.cc.Invoke(ctx, ShoppingCartService_AddItemToCart_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShoppingCartServiceServer is the server API for ShoppingCartService service.
// All implementations must embed UnimplementedShoppingCartServiceServer
// for forward compatibility.
type ShoppingCartServiceServer interface {
	CreateShoppingCart(context.Context, *CreateShoppingCartRequest) (*CreateShoppingCartResponse, error)
	AddItemToCart(context.Context, *AddItemToCartRequest) (*AddItemToCartResponse, error)
	mustEmbedUnimplementedShoppingCartServiceServer()
}

// UnimplementedShoppingCartServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedShoppingCartServiceServer struct{}

func (UnimplementedShoppingCartServiceServer) CreateShoppingCart(context.Context, *CreateShoppingCartRequest) (*CreateShoppingCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShoppingCart not implemented")
}
func (UnimplementedShoppingCartServiceServer) AddItemToCart(context.Context, *AddItemToCartRequest) (*AddItemToCartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddItemToCart not implemented")
}
func (UnimplementedShoppingCartServiceServer) mustEmbedUnimplementedShoppingCartServiceServer() {}
func (UnimplementedShoppingCartServiceServer) testEmbeddedByValue()                             {}

// UnsafeShoppingCartServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ShoppingCartServiceServer will
// result in compilation errors.
type UnsafeShoppingCartServiceServer interface {
	mustEmbedUnimplementedShoppingCartServiceServer()
}

func RegisterShoppingCartServiceServer(s grpc.ServiceRegistrar, srv ShoppingCartServiceServer) {
	// If the following call pancis, it indicates UnimplementedShoppingCartServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&ShoppingCartService_ServiceDesc, srv)
}

func _ShoppingCartService_CreateShoppingCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShoppingCartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingCartServiceServer).CreateShoppingCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingCartService_CreateShoppingCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingCartServiceServer).CreateShoppingCart(ctx, req.(*CreateShoppingCartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShoppingCartService_AddItemToCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddItemToCartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingCartServiceServer).AddItemToCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShoppingCartService_AddItemToCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingCartServiceServer).AddItemToCart(ctx, req.(*AddItemToCartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ShoppingCartService_ServiceDesc is the grpc.ServiceDesc for ShoppingCartService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ShoppingCartService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ShoppingCartService",
	HandlerType: (*ShoppingCartServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateShoppingCart",
			Handler:    _ShoppingCartService_CreateShoppingCart_Handler,
		},
		{
			MethodName: "AddItemToCart",
			Handler:    _ShoppingCartService_AddItemToCart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shopping-cart.proto",
}
